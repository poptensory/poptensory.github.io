<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.tensory.online/"/>
  <updated>2018-09-20T13:39:16.394Z</updated>
  <id>http://www.tensory.online/</id>
  
  <author>
    <name>tensory</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hive搭建(集成mysql)</title>
    <link href="http://www.tensory.online/2018/09/20/build_hive/"/>
    <id>http://www.tensory.online/2018/09/20/build_hive/</id>
    <published>2018-09-20T11:49:02.846Z</published>
    <updated>2018-09-20T13:39:16.394Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |=""><br>本文详细讲述Hive的搭建过程。<a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""><br>Hive是一种数据仓库，建立在HDFS之上，因此，搭建Hive之前需要成功搭建Hadoop平台。</the></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p><strong>1.搭好Hadoop平台。</strong><br><strong>2.准备好Hive安装包和mysql驱动</strong><br>Hive安装包可以到官网下载，mysql驱动官网貌似找不到jar包，可以<a href="https://github.com/poptensory/OnlineResource/blob/master/mysql-connector-java-5.1.41-bin.jar?raw=true" target="_blank" rel="noopener">点我下载mysql驱动</a>。<br><strong>3.注意:如果是集群Hive只需要安装在一个节点上</strong></p><h1 id="Hive的配置"><a href="#Hive的配置" class="headerlink" title="Hive的配置"></a>Hive的配置</h1><p><strong>1.解压Hive安装包</strong><br>将Hive安装包和mysql驱动放在主目录（或其他目录，本文以主目录为例），如下图</p><p>通过如下命令解压Hive安装包：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-hive-2.3.3-bin.tar.gz</span><br></pre></td></tr></table></figure></p><p>解压后会出现apache-hive-2.3.3-bin文件，此处更名为更简单的名字，命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv apache-hive-2.3.3-bin hive-2.3.3</span><br></pre></td></tr></table></figure></p><p>现在hive-2.3.3这个目录就是Hive主目录。</p><p><strong>2.配置Hive环境变量</strong><br>打开环境变量配置文件，命令如下：<br>sudo vi /etc/profile<br>在文件末尾添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># hive home dir</span><br><span class="line">export HIVE_HOME=/home/tensory/hive-2.3.3</span><br><span class="line">export PATH=$PATH:$HIVE_HOME/bin</span><br></pre></td></tr></table></figure><p>添加完毕之后，保存，输入如下命令激活环境变量：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><p>激活之后，输入如下命令检测环境变量是否配置好：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hive –version</span><br></pre></td></tr></table></figure></p><p>顺利的话，会看到Hive版本等信息。</p><p><strong>3.修改Hive配置文件hive-site.xml</strong><br>进入Hive主目录，进入其下的conf目录。输入如下命令，从模板复制一份配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp hive-default.xml.template hive-site.xml</span><br></pre></td></tr></table></figure></p><p>修改hive-site.xml，先删除<configuration>标签里面的所有内容（为什么是所有？）<br>放入下面这些代码：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>tensory<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://192.168.174.135:3306/hive?useSSL=false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure></configuration></p><p>修改后的hive-site.xml文件就像这样子：</p><p>上图的”tensory”和”123456”为稍后mysql连接hive的账密，IP地址改为hive所在节点的IP地址。其他不用修改，影响不大。保存。</p><p><strong>4.修改Hive配置文件hive-env.sh</strong><br>先从模板复制一份，然后再修改，命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp hive-env.sh.template hive-env.sh</span><br></pre></td></tr></table></figure></p><p>通过vi打开hive-env.sh，在里面添加HADOOP的主路径，类似下面这样：<br>HADOOP_HOME=/home/tensory/hadoop-2.6.5/</p><p>保存。</p><h1 id="mysql的安装与集成"><a href="#mysql的安装与集成" class="headerlink" title="mysql的安装与集成"></a>mysql的安装与集成</h1><p><strong>1.安装mysql相关服务</strong><br>输入mysql安装命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql</span><br></pre></td></tr></table></figure></p><p>稍等会询问，输入y。<br>输入y，等待一段时间后，会提示输入MySQL的root用户的密码。这个密码，稍后用于mysql的登录。设置即可。</p><p>安装完毕之后，默认mysql是启动的。</p><p><strong>2.用root用户登录mysql</strong><br>输入登录命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></p><p>会提示输入密码，就是刚刚设置的密码。然后，就进入了mysql的命令模式，如下图：</p><p><strong>3.创建一个hive数据库</strong><br>在mysql的命令模式下，创建hive数据库，命令为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database hive;</span><br></pre></td></tr></table></figure></p><p>然后，再通过如下三行命令，集成mysql到hive：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER  &apos;tensory&apos;@&apos;%&apos;  IDENTIFIED BY &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON  *.* TO &apos;tensory&apos;@&apos;%&apos; WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></p><p>其中’tensory’和’123456’为在hive-site.xml中设置的账密，用于hive连接mysql。</p><p>通过exit;命令退出mysql交互式模式。</p><p><strong>4.修改mysql的配置文件</strong><br>进入/etc/mysql/mysql.conf.d/mysqld.cnf里面，代码为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure></p><p>找到bind-address这一行，注释掉就可以，如下图，注释掉：</p><p><strong>5.拷贝mysql驱动程序</strong><br>进入主目录，将mysql驱动程序拷贝到hive-2.3.3/lib/目录下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp mysql-connector-java-5.1.41-bin.jar hive-2.3.3/lib/</span><br></pre></td></tr></table></figure></p><h1 id="初始化元数据"><a href="#初始化元数据" class="headerlink" title="初始化元数据"></a>初始化元数据</h1><p><strong>1.启动Hadoop</strong><br>在任何一个目录输入命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-all.sh</span><br></pre></td></tr></table></figure></p><p>可以通过jps命令测试是否启动hadoop。</p><p><strong>2.初始化</strong><br>初始化命令为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schematool -dbType mysql -initSchema</span><br></pre></td></tr></table></figure></p><p>如果遇到下面这个问题：</p><p>重启msyql服务即可，命令为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure></p><p>重启之后，再输入初始化命令，顺利的话，可以看到类似如下图的信息：</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p><strong>1.简单测试</strong><br>  s1:输入hive，进入hive交互模式。<br>  s2:查看有哪些数据库:<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure></p><p>  s3:创建一个数据库：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database dbTest;</span><br></pre></td></tr></table></figure></p><p>  s4:再查看数据库：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure></p><p><strong>2.建表</strong></p><p>依然在hive交互模式下，通过如下命令进入dbTest数据库下，开始建表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use dbTest</span><br></pre></td></tr></table></figure></p><p>建立一个名为tbTest的表，建表命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table tbTest (id string, name string, age string);</span><br></pre></td></tr></table></figure></p><p><strong>3.创建数据</strong><br>（退出hive交互模式）创建一个文本文件，tbtest.txt，写入如下内容(或者其他内容)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">111,Mike,21</span><br><span class="line">222,Bob,20</span><br><span class="line">333,Cindy,22</span><br></pre></td></tr></table></figure></p><p><strong>4.导入数据</strong><br>（进入hive交互模式）向表tbTest中导入上面的数据，命令为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load data local inpath &apos;/home/tensory/tbtest.txt&apos; into table tbtest;</span><br></pre></td></tr></table></figure></p><p>注意选择创建的tbtest.txt的路径。</p><p><strong>5.查看数据</strong><br>查看表中的所有数据，命令为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from tbtest;</span><br></pre></td></tr></table></figure></p><p>结果如下图：</p><p>发现后面两列为NULL，因为hive建表的时候默认的分隔符不是文本文件中的分隔符：逗号，输入如下命令修改分隔符：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table tbtest set SERDEPROPERTIES(&apos;field.delim&apos;=&apos;,&apos;);</span><br></pre></td></tr></table></figure></p><p>再次查看，正常，如下图：</p><p><strong>6.查看HDFS</strong><br>进入hdfs的web界面，查看文件系统，可以看到对应的表，和对应的数据文件，如下图。</p><p>把这个文件下载下来，查看，会发现和导入的那个文件内容完全相同。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.cnblogs.com/kinginme/p/7233315.html" target="_blank" rel="noopener">Hive安装与配置</a><br><a href="http://www.cnblogs.com/kinginme/p/7249533.html" target="_blank" rel="noopener">Hive集成mysql数据库</a><br><a href="https://www.cnblogs.com/dxxblog/p/8193967.html" target="_blank" rel="noopener">Hive安装与配置详解</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot;&gt;&lt;br&gt;本文详细讲述Hive的搭建过程。
    
    </summary>
    
      <category term="大数据" scheme="http://www.tensory.online/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Hive" scheme="http://www.tensory.online/tags/Hive/"/>
    
      <category term="Hadoop" scheme="http://www.tensory.online/tags/Hadoop/"/>
    
      <category term="Linux" scheme="http://www.tensory.online/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>配置多台虚拟机之间的免密通信</title>
    <link href="http://www.tensory.online/2018/09/14/ssh_rsa/"/>
    <id>http://www.tensory.online/2018/09/14/ssh_rsa/</id>
    <published>2018-09-14T13:28:35.997Z</published>
    <updated>2018-09-14T14:43:50.666Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |=""><br>本文讲解多台虚拟机之间的免密登录和免密文件传输<a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><p>在搭建Spark+Hadoop平台的时候，通常需要将文件从一个节点批量传递给其他节点，传递的方式是通过scp命令，但是每一次scp都需要对方口令，<br>才可以传输。为了方便文件传输，需要配置免密登录，这样在使用scp命令传输的时候，可以省去输入密码的繁琐过程。</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>假设有主机名为A、B和C三台虚拟机，IP地址分别为IPA、IPB和IPC。首先每台虚拟机都可以生成属于自己的秘钥（类似于每台虚拟机的口令），<br>假设生成的秘钥分别为pwdA、pwdB和pwdC，那么只要这些虚拟机相互交换这些秘钥，之后就可以了互相免密通信了。具体的做法是，举个例子，<br>A将pwdA放到一个文件X中，B和C将各自的秘钥也放到位于A的X中（这个过程中，B和C需要知道A的口令），现在A的X中含有A、B和C三台虚拟机<br>秘钥，然后由A将文件X分发给B和C，如此，A、B和C均具有另外二者的秘钥了，于是就可以进行免密登录和免密文件传输。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>关闭防火墙</li></ul><p>在每台虚拟机的终端执行关闭防火墙的命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw disable</span><br></pre></td></tr></table></figure></p><ul><li>配置IP地址到代号的映射</li></ul><p>用IP地址标记某台主机不方便，因此可以为将主机IP地址映射为一个代号，方便命令的输入。例如A、B和C的代号可以分别是master、slave1和<br>slave2(此处master slave没有特别意义)。在每台虚拟机终端修改/etc/hosts文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/hosts</span><br></pre></td></tr></table></figure></p><p>在文件末尾追加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IPAmaster</span><br><span class="line">IPBslave1</span><br><span class="line">IPCslave2</span><br></pre></td></tr></table></figure></p><p>输入完毕，保存。注意，此步骤不是必要的，只是为了稍后秘钥传输和之后文件传输的便捷。</p><h1 id="生成rsa秘钥"><a href="#生成rsa秘钥" class="headerlink" title="生成rsa秘钥"></a>生成rsa秘钥</h1><p>在每台虚拟机终端，生成各自的rsa秘钥。</p><p>在任意一个目录新建.ssh目录，我们以在~目录下建立这个目录（这个目录以.开头，ls看不到，ls -a 命令可以看到）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir .ssh</span><br></pre></td></tr></table></figure></p><p>进入该目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd .ssh</span><br></pre></td></tr></table></figure></p><p>生成rsa秘钥<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure></p><p>(此处会询问是否设置密码，连续输入三个回车即可，即默认无密码ssh。如果是大型项目，需要设置密码)<br>然后会发现，在.ssh目录下，多了两个文件，分别名为  id_rsa和id_rsa.pub，分别为私钥和公钥，虚拟机之间需要交换的公钥。</p><h1 id="收集秘钥"><a href="#收集秘钥" class="headerlink" title="收集秘钥"></a>收集秘钥</h1><p>现在，每台虚拟机都有了各自的秘钥，现在指定某台虚拟机，将公钥收集在一起。此处指定master，即虚拟机A。<br>在A的终端的.ssh目录下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure></p><p>即将A的公钥放到authorized_keys文件中。</p><p>在B的终端的.ssh目录下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp id_rsa.pub | ssh 主机名@master &apos;cat &gt;&gt; ~/.ssh/authorized_keys&apos;</span><br></pre></td></tr></table></figure></p><p>（此处要输入A的口令）<br>即将B的公钥放到A的authorized_keys中</p><p>在C的终端的.ssh目录下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp id_rsa.pub | ssh 主机名@master &apos;cat &gt;&gt; ~/.ssh/authorized_keys&apos;</span><br></pre></td></tr></table></figure></p><p>（此处要输入A的口令）<br>即将C的公钥放到A的authorized_keys中</p><h1 id="分发秘钥"><a href="#分发秘钥" class="headerlink" title="分发秘钥"></a>分发秘钥</h1><p>现在A的authorized_keys中有了A、B和C的秘钥了，只需要将这个文件分发给B和C即可。<br>在A的终端分别执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp authorized_keys | ssh B@slave1:~/.ssh/</span><br></pre></td></tr></table></figure><p>（此处要输入B的口令）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp authorized_keys | ssh C@slave2:~/.ssh/</span><br></pre></td></tr></table></figure><p>（此处要输入C的口令）</p><h1 id="完成配置"><a href="#完成配置" class="headerlink" title="完成配置"></a>完成配置</h1><p>现在A、B和C分别具有另外两者的秘钥了，可以使用 ssh 命令免密登录或scp免密传输文件，命令如下：</p><ul><li>在A的终端登录到B主机：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh slave1</span><br></pre></td></tr></table></figure></li></ul><p>（不用口令就可以登录到B的终端）</p><ul><li>在C的终端传文件给A主机：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp file_dir/file_name | ssh A@master:/some_dir/</span><br></pre></td></tr></table></figure></li></ul><p>（不用口令）</p><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><ul><li>使用scp命令的时候，区分主机名和IP地址的代号。</li><li>这里master和slave没有实际意义，任意一台虚拟机都可完成收集/分发秘钥工作。</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://blog.csdn.net/diyxiaoshitou/article/details/52471097" target="_blank" rel="noopener">虚拟机中多个Linux系统之间配置免秘钥登录</a></li><li><a href="https://blog.csdn.net/diyxiaoshitou/article/details/52471097" target="_blank" rel="noopener">id_rsa id_pub 公钥与私钥</a></li></ul></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot;&gt;&lt;br&gt;本文讲解多台虚拟机之间的免密登录和免密文件传输
    
    </summary>
    
      <category term="Linux" scheme="http://www.tensory.online/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="http://www.tensory.online/tags/Ubuntu/"/>
    
      <category term="SSH" scheme="http://www.tensory.online/tags/SSH/"/>
    
      <category term="rsa" scheme="http://www.tensory.online/tags/rsa/"/>
    
  </entry>
  
  <entry>
    <title>小小总结-新的征程</title>
    <link href="http://www.tensory.online/2018/09/09/firstBlogAboutMasterLife/"/>
    <id>http://www.tensory.online/2018/09/09/firstBlogAboutMasterLife/</id>
    <published>2018-09-09T04:54:39.271Z</published>
    <updated>2018-09-09T05:52:57.269Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |=""><br>毕业了才知道，上大学真舒服。<a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><p>这个博客反反复复搭了3次，这次终于找到自己想要的主题，虽然存在一些问题和可以优化的细节，大部分功能已经配置齐全。第一篇正式的博客，总结一下近况。</p><p>2018.3-2018.9这半年，知识增长的不多不少，体重依然稳定。总结了一些学习和生活的小感悟。</p><h1 id="编程的好习惯"><a href="#编程的好习惯" class="headerlink" title="编程的好习惯"></a>编程的好习惯</h1><p>1.代码量较大的时候，做好单个函数/模块的测试，测试的数据应该多样化、复杂化，确保涵盖真实输入的所有可能。</p><p>2.涉及大量代码、大量输入文件、结果文件时，写好文档，说明各个脚本、文本文件等的意义。</p><h1 id="学习与选择"><a href="#学习与选择" class="headerlink" title="学习与选择"></a>学习与选择</h1><p>1.发挥自己的优势。明确自己的优势，是算法、数学、工程能力还是系统能力，也许样样干的都不错，但是一个人的时间和精力有限，学习所有的东西几乎不可能，所以务必选择自己擅长的领域/方向/方法，充分发挥自己的优势，规避自己不熟悉且学习成本高的那一块。</p><p>2.在面临大大小小的选择的时候，不必马上做出选择，先冷静下来，避免“选择-做一段时间-放弃”这种情况，这样既浪费时间，又让自己养成了半途而废的畏惧心理。</p><h1 id="好好生活"><a href="#好好生活" class="headerlink" title="好好生活"></a>好好生活</h1><p>保持热情，让自己舒服。庆幸自己做的工作不辣么讨厌，但是遇到正向反馈周期长的时候，总会失去兴趣。这个时候，可以写个博客，把自己学到的show出来，酷酷的，让自己成就感满满。新的篇章早已打开，努力不努力的鸡汤，说起来没有意义，总之，扎实做事，让自己活的舒服一点。还有…多听相声。</p></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot;&gt;&lt;br&gt;毕业了才知道，上大学真舒服。
    
    </summary>
    
      <category term="生活" scheme="http://www.tensory.online/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="编程" scheme="http://www.tensory.online/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="舒服" scheme="http://www.tensory.online/tags/%E8%88%92%E6%9C%8D/"/>
    
  </entry>
  
</feed>
